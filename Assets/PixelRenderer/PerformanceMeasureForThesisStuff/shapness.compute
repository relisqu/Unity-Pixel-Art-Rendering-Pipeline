// SharpnessCompute.compute
#pragma kernel CSMain

RWTexture2D<float4> Result;
Texture2D<float4> Input;

[numthreads(8, 8, 1)]
void CSMain (uint3 id : SV_DispatchThreadID) {
    uint width, height;
    Result.GetDimensions(width, height);


    float4 color = Input[id.xy];
    float intensity = dot(color.rgb, float3(0.2126, 0.7152, 0.0722));
    
    float maxVariation = 0;
    for (int x = -1; x <= 1; x++) {
        for (int y = -1; y <= 1; y++) {
            if (x != 0 || y != 0) {
                int2 neighbor = id.xy + int2(x, y);
                if (neighbor.x >= 0 && neighbor.y >= 0 && neighbor.x < width && neighbor.y < height) {
                    float4 neighborColor = Input[neighbor];
                    float neighborIntensity = dot(neighborColor.rgb, float3(0.2126, 0.7152, 0.0722));
                    maxVariation = max(maxVariation, abs(intensity - neighborIntensity));
                }
            }
        }
    }

    Result[id.xy] = float4(maxVariation, 0, 0, 0);
}